#  Building Open Source Network Security Tools
#
#  This file is part of the nfdump project.
#
#  Copyright (c) 2004, SWITCH - Teleinformatikdienste fuer Lehre und Forschung
#  All rights reserved.
#   
#  Redistribution and use in source and binary forms, with or without 
#  modification, are permitted provided that the following conditions are met:
#  
#   * Redistributions of source code must retain the above copyright notice, 
#     this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright notice, 
#     this list of conditions and the following disclaimer in the documentation 
#     and/or other materials provided with the distribution.
#   * Neither the name of SWITCH nor the names of its contributors may be 
#     used to endorse or promote products derived from this software without 
#     specific prior written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
#  POSSIBILITY OF SUCH DAMAGE.
#   
#
#  $Author: peter $
#
#  $Id: Makefile.in 40 2005-08-24 08:07:54Z peter $
#

srcdir	 = .
DESTDIR	 =
CC		 = @CC@
YACC	 = @YACC@
LEX		 = @LEX@
INSTALL	 = @INSTALL@
CFLAGS	 = @CFLAGS@
CPPFLAGS = -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 
YFLAGS	 = -d -v
LFLAGS	 = @LFLAGS@
LDFLAGS	 = @LIBS@
prefix   = @prefix@
PREFIX	 = $(DESTDIR)/$(prefix)
MANDIR 	 = $(DESTDIR)/@mandir@
CRYPTO_PAN_OBJ	= panonymizer.o rijndael.o
FILTER_OBJ		= grammar.o scanner.o nftree.o
NFDUMP_OBJ		= nfdump.o $(FILTER_OBJ) nf_common.o nfstat.o nfprof.o util.o $(CRYPTO_PAN_OBJ)
NFPROF_OBJ		= nfprofile.o profile.o $(FILTER_OBJ) nf_common.o util.o $(CRYPTO_PAN_OBJ)
NFRPLY_OBJ		= nfreplay.o $(FILTER_OBJ) nf_common.o util.o $(CRYPTO_PAN_OBJ)
NFCAPD_OBJ		= nfcapd.o nf_common.o launch.o $(CRYPTO_PAN_OBJ)
FT2NF_OBJ		=  ft2nfdump.o nf_common.o $(CRYPTO_PAN_OBJ)
OBJECTS  = nfcapd nfdump nfprofile nfreplay nftree_check nfgen @opt_objects@
INCS	 = @FT_INCLUDES@
LIBS	 = 
FT_LIBS	 = -lft -lz
FT_LDFLAGS = @FT_LDFLAGS@

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(INCS) $<

all: $(OBJECTS)

nfcapd:	$(NFCAPD_OBJ)
	$(CC) $(CFLAGS) -o $@ $(NFCAPD_OBJ) $(LDFLAGS)

nftree_check: nftree_check.o $(FILTER_OBJ)
	$(CC) $(CFLAGS) $(INCS) -o $@ nftree_check.o $(FILTER_OBJ) $(LDFLAGS)

nfgen: nfgen.o 
	$(CC) $(CFLAGS) $(INCS) -o $@ $? $(LDFLAGS)

nfdump: $(NFDUMP_OBJ)
	$(CC) $(CFLAGS) $(INCS) -o $@ $(NFDUMP_OBJ) $(LDFLAGS)

nfprofile: $(NFPROF_OBJ)
	$(CC) $(CFLAGS) $(INCS) -o $@ $(NFPROF_OBJ) $(LDFLAGS)

nfreplay: $(NFRPLY_OBJ)
	$(CC) $(CFLAGS) $(INCS) -o $@ $(NFRPLY_OBJ) $(LDFLAGS)

ft2nfdump: $(FT2NF_OBJ)
	$(CC) $(CFLAGS) -o $@ $(FT2NF_OBJ) $(FT_LDFLAGS) $(FT_LIBS)

install: $(OBJECTS)
	test -d $(PREFIX) || install -d -o root -g bin -m 755 $(PREFIX)
	test -d $(PREFIX)/bin || install -d -o root -g bin -m 755 $(PREFIX)/bin
	test -d $(MANDIR) || install -d -o root -g bin -m 755 $(MANDIR)
	test -d $(MANDIR)/man1 || install -d -o root -g bin -m 755 $(MANDIR)/man1
	$(INSTALL) -o root -g bin -m 755 nfcapd $(PREFIX)/bin
	$(INSTALL) -o root -g bin -m 755 nfdump $(PREFIX)/bin 
	$(INSTALL) -o root -g bin -m 755 nfprofile $(PREFIX)/bin
	$(INSTALL) -o root -g bin -m 755 nfreplay $(PREFIX)/bin
	test -f $(PREFIX)/bin/nfclean.pl || $(INSTALL) -o root -g bin -m 755 nfclean.pl $(PREFIX)/bin

	$(INSTALL) -o root -g bin -m 644 nfcapd.1 $(MANDIR)/man1
	$(INSTALL) -o root -g bin -m 644 nfdump.1 $(MANDIR)/man1
	$(INSTALL) -o root -g bin -m 644 nfprofile.1 $(MANDIR)/man1
	$(INSTALL) -o root -g bin -m 644 nfreplay.1 $(MANDIR)/man1
	if test -f ft2nfdump; then \
		$(INSTALL) -o root -g bin -m 755 ft2nfdump $(PREFIX)/bin;   \
		$(INSTALL) -o root -g bin -m 644 ft2nfdump.1 $(MANDIR)/man1;    \
	fi;

uninstall:
	/bin/rm -f  $(PREFIX)/bin/nfcapd
	/bin/rm -f  $(PREFIX)/bin/nfdump
	/bin/rm -f  $(PREFIX)/bin/nfprofile
	/bin/rm -f  $(PREFIX)/bin/nfreplay
	/bin/rm -f  $(PREFIX)/bin/nfclean.pl

	/bin/rm -f  $(MANDIR)/man1/nfcapd.1
	/bin/rm -f  $(MANDIR)/man1/nfdump.1
	/bin/rm -f  $(MANDIR)/man1/nfprofile.1
	/bin/rm -f  $(MANDIR)/man1/nfreplay.1

test: nftree_check
	./nftree_check
	./nfgen | ./nfdump -o extended | head -17 > test1.out
	diff test1.out nfdump.test.out
	./nfgen > test.flows
	./nfdump -r test.flows -o extended | head -17 > test2.out
	diff test2.out nfdump.test.out
	rm -r test1.out test2.out

clean:
	rm -f *.o *~ y.* *.tab.* *core* $(OBJECTS) grammar.h grammar.c scanner.c

distclean:
	rm -f *.o *~ y.* *.tab.* *core* $(OBJECTS) grammar.h grammar.c scanner.c
	rm -f config.log config.h config.status Makefile

lint:
	splint -warnposix $(FSRC)

grammar.h: grammar.c
grammar.c: grammar.y
	@rm -f grammar.c grammar.h
	$(YACC) $(YFLAGS) $<
	mv y.tab.c grammar.c
	mv y.tab.h grammar.h

scanner.c: scanner.l
	@rm -f $@
	$(LEX) $(LFLAGS) $< 
	mv lex.yy.c $@

depend: grammar.c scanner.c
	makedepend $(CPPFLAGS) -- $(ASRC)

# EOF
# DO NOT DELETE
